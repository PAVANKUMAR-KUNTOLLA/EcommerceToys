{"version":3,"sources":["webpack:///./src/components/message.js","webpack:///./src/views/Cart/ConfirmationDialogBox.js","webpack:///./src/views/Cart/cart.page.js"],"names":["Message","navigate","useNavigate","React","Stack","sx","width","spacing","Alert","severity","Link","onClick","customTextStyles","makeStyles","theme","_customizedButton","dialogBox","_defineProperty","borderRadius","breakpoints","down","border","boxShadow","quantityRow","margin","display","flexWrap","alignItems","justifyContent","textAlign","maxWidth","boldText","fontSize","fontWeight","lineHeight","marginBottom","normalText","mainText","opacity","color","marginLeft","marginRight","paper","overflowY","customizedButton","position","left","top","palette","grey","backgroundColor","common","white","confirmButton","padding","ConfirmationDialogBox","_ref","type","open","handleClose","handleConfirm","isLoadingSpin","productId","customTextClasses","currProduct","useSelector","state","products","find","product","id","createElement","Dialog","onClose","scroll","classes","className","DialogTitle","DialogContent","dividers","IconButton","CloseIcon","Box","xs","sm","Typography","Avatar","variant","alt","title","src","concat","image_0","height","Button","disabled","data","quantity","is_item_in_cart","is_favourite","CircularProgress","size","customCartStyles","mainBlock","flexDirection","up","cartBlock","imageBlock","contentBlock","marginTop","image","cursor","price","maxHeight","favIcon","borderColor","favQuantity","rightBlock","CartPage","cart","useMediaQuery","_useState2","_slicedToArray","useState","isconfirmDialogOpen","setIsconfirmDialogOpen","_useState4","editProductId","setEditProductId","_useState6","orderType","setOrderType","customStyles","dispatch","useDispatch","handleEditProduct","setLoadingSpin","payload","privateApiPOST","Api","edit_product","then","response","status","console","log","setProducts","error","handleNav","value","path","Page","Container","length","map","Grid","container","key","borderTop","item","handleProductView","thousands_separators","handleFavouriteClick","FavoriteIcon","FavoriteBorderIcon","TextField","pattern","onChange","e","Math","floor","handleQuantityChange","target","right","handleDeleteChange","DeleteIcon","reduce","acc","toFixed","localStorage","getItem"],"mappings":"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","file":"cart.page.js","sourcesContent":["import * as React from \"react\";\nimport { Alert, Link } from \"@mui/material\";\nimport Stack from \"@mui/material/Stack\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Message() {\n  const navigate = useNavigate();\n  return (\n    <Stack sx={{ width: \"100%\" }} spacing={2}>\n      <Alert severity=\"info\">\n        Your cart is empty.{\" \"}\n        <Link onClick={() => navigate(\"/app/products\")}>View Products</Link>\n      </Alert>\n      {/* <Alert severity=\"warning\">This is a warning alert — check it out!</Alert> */}\n      {/* <Alert severity=\"info\">This is an info alert — check it out!</Alert> */}\n      {/* <Alert severity=\"success\">This is a success alert — check it out!</Alert> */}\n    </Stack>\n  );\n}\n","import React from \"react\";\nimport {\n  Grid,\n  Button,\n  Dialog,\n  Box,\n  DialogActions,\n  DialogContent,\n  CircularProgress,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Typography,\n  Alert,\n  AlertTitle,\n  Avatar,\n} from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { makeStyles } from \"@mui/styles\";\nimport { thousands_separators } from \"../../utils/index\";\nimport { useSelector } from \"react-redux\";\n\nconst customTextStyles = makeStyles((theme) => ({\n  dialogBox: {\n    borderRadius: \"10px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      borderRadius: \"20px 20px 0px 0px\",\n      border: \"1px solid rgba(151,151,151, 1)\",\n      boxShadow: \"0px -3px 8px rgba(0,0,0, 0.1)\",\n    },\n  },\n  quantityRow: {\n    margin: \"32px auto 50px\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    textAlign: \"left\",\n    maxWidth: \"230px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"24px 20px 40px\",\n    },\n  },\n  boldText: {\n    fontSize: \"18px\",\n    fontWeight: \"600\",\n    lineHeight: \"24px\",\n    marginBottom: \"7px\",\n  },\n  normalText: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"22px\",\n  },\n  mainText: {\n    opacity: 1,\n    color: \"rgba(71,71,71,1)\",\n    fontSize: \"24px\",\n    fontWeight: \"400\",\n    textAlign: \"center\",\n    lineHeight: \"33px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"20px\",\n      lineHeight: \"27px\",\n      marginLeft: \"8px\",\n      marginRight: \"7px\",\n    },\n  },\n  paper: {\n    overflowY: \"unset\",\n  },\n  customizedButton: {\n    position: \"absolute\",\n    left: \"97.5%\",\n    top: \"-4%\",\n    color: theme.palette.grey[800],\n    backgroundColor: theme.palette.common.white,\n    [theme.breakpoints.down(\"sm\")]: {\n      left: \"93%\",\n      top: \"-5%\",\n    },\n    \"&:hover\": {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  confirmButton: {\n    fontSize: \"16px\",\n    fontWeight: \"600\",\n    lineHeight: \"24px\",\n    padding: \"10px 40px 9px\",\n    marginBottom: \"4px\",\n    opacity: 0.8,\n  },\n}));\n\nconst ConfirmationDialogBox = ({\n  type,\n  open,\n  handleClose,\n  handleConfirm,\n  isLoadingSpin,\n  productId,\n}) => {\n  const customTextClasses = customTextStyles();\n  const products = useSelector((state) => state.products.products);\n  const currProduct = products.find((product) => product.id === productId);\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      scroll=\"paper\"\n      aria-labelledby=\"scroll-dialog-title\"\n      aria-describedby=\"scroll-dialog-description\"\n      classes={{ paper: customTextClasses.paper }}\n      className={customTextClasses.dialogBox}\n    >\n      <DialogTitle id=\"scroll-dialog-title\"></DialogTitle>\n      <DialogContent dividers={false}>\n        <IconButton\n          aria-label=\"close\"\n          onClick={handleClose}\n          className={customTextClasses.customizedButton}\n        >\n          <CloseIcon />\n        </IconButton>\n        {type === \"placeOrder\" ? (\n          <Box>\n            <Box sx={{ margin: { xs: \"0\", sm: \"16px 152px 32px\" } }}>\n              <Typography className={customTextClasses.mainText}>\n                Confirm Investment in SGB Scheme 2021-22 Series IV\n              </Typography>\n            </Box>\n          </Box>\n        ) : (\n          <Box sx={{ textAlign: \"center\", padding: \"20px\" }}>\n            <Avatar\n              variant=\"square\"\n              alt={currProduct.title}\n              src={`https://${currProduct.image_0}`}\n              sx={{\n                height: 180,\n                width: 130,\n                position: \"relative\",\n                margin: \"8px auto\",\n              }}\n            />\n\n            <Typography className={customTextClasses.boldText}>\n              {currProduct.title}\n            </Typography>\n            <Typography className={customTextClasses.normalText}>\n              Are you sure you want to delete the item from your cart?\n            </Typography>\n\n            <Button\n              sx={{\n                display: \"block\",\n                margin: \"16px auto\",\n              }}\n              disabled={isLoadingSpin}\n              variant=\"contained\"\n              color=\"primary\"\n              className={customTextClasses.confirmButton}\n              onClick={() => {\n                let data = {\n                  id: currProduct.id,\n                  title: currProduct.id,\n                  quantity: 0,\n                  is_item_in_cart: false,\n                  is_favourite: false,\n                };\n                handleConfirm(data);\n              }}\n            >\n              Yes\n              {isLoadingSpin && (\n                <CircularProgress\n                  size={15}\n                  color=\"primary\"\n                  sx={{ marginLeft: \"15px\" }}\n                />\n              )}\n            </Button>\n          </Box>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default ConfirmationDialogBox;\n","import React, { useState, useEffect } from \"react\";\nimport Page from \"../../components/Page\";\nimport Message from \"../../components/message\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Avatar,\n  Typography,\n  TextField,\n  useMediaQuery,\n  Button,\n  IconButton,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport Api from \"../../components/Api\";\nimport { setProducts, setLoadingSpin } from \"../../redux/products/produtsSlice\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport { thousands_separators } from \"../../utils\";\nimport ConfirmationDialogBox from \"./ConfirmationDialogBox\";\n\nconst customCartStyles = makeStyles((theme) => ({\n  mainBlock: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    [theme.breakpoints.up(\"sm\")]: {\n      flexDirection: \"row\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  cartBlock: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    position: \"relative\",\n  },\n  imageBlock: {\n    width: \"50%\",\n    height: \"100%\",\n  },\n  contentBlock: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    padding: \"0 16px\",\n    marginTop: \"2rem\",\n  },\n  image: {\n    width: \"100%\",\n    height: \"auto\",\n    cursor: \"pointer\",\n  },\n  title: {\n    fontSize: \"16px\",\n    fontWeight: \"500\",\n    lineHeight: \"21px\",\n    marginBottom: \"5px\",\n  },\n  price: {\n    fontWeight: \"700\",\n    fontSize: \"18px\",\n    lineHeight: \"24px\",\n    marginBottom: \"16px\",\n  },\n  quantity: {\n    maxWidth: \"110px\",\n    maxHeight: \"50px\",\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderRadius: \"0\",\n      },\n    },\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      border: \"0.1px solid #bdbdbd\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"40px\",\n      width: \"90px\",\n      \"& .MuiInputBase-input\": {\n        padding: \"10px\",\n      },\n    },\n  },\n  favIcon: {\n    width: \"100px\",\n    height: \"40px\",\n    borderColor: \"1px solid black\",\n    borderRadius: \"0 !important\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(255, 255, 255, 1)\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"40px\",\n      width: \"70px\",\n      padding: \"1px\",\n    },\n  },\n  favQuantity: {\n    display: \"flex\",\n    [theme.breakpoints.down(\"sm\")]: {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      height: \"60px\",\n    },\n  },\n  rightBlock: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    marginTop: \"16px\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: \"50px\",\n      marginBottom: \"auto\",\n      marginLeft: \"16px\",\n      marginRight: \"16px\",\n    },\n  },\n}));\n\nconst CartPage = () => {\n  const cart = useSelector((state) => state.products.cart);\n  const matchesSm = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  const isLoadingSpin = useSelector((state) => state.products.isLoadingSpin);\n  const [isconfirmDialogOpen, setIsconfirmDialogOpen] = useState(false);\n  const [editProductId, setEditProductId] = useState(null);\n  const [orderType, setOrderType] = useState(\"placeOrder\");\n\n  const customStyles = customCartStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleFetchProducts = () => {\n    dispatch(setLoadingSpin(true));\n    privateApiGET(Api.products)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          dispatch(setProducts(data?.data));\n          dispatch(setLoadingSpin(false));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        dispatch(setLoadingSpin(false));\n      });\n  };\n\n  const handleEditProduct = (data) => {\n    dispatch(setLoadingSpin(true));\n    let payload = data;\n    privateApiPOST(Api.edit_product, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          dispatch(setProducts(data?.data));\n          setIsconfirmDialogOpen(false);\n          dispatch(setLoadingSpin(false));\n          setEditProductId(\"\");\n          setOrderType(\"placeOrder\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsconfirmDialogOpen(false);\n        setEditProductId(\"\");\n        setOrderType(\"placeOrder\");\n        dispatch(setLoadingSpin(false));\n      });\n  };\n\n  const handleFavouriteClick = (id, title, is_favourite) => {\n    const data = { id: id, title: title, is_favourite: !is_favourite };\n    handleEditProduct(data);\n  };\n\n  const handleQuantityChange = (id, title, quantity) => {\n    let data = {};\n    if (quantity >= 1 && quantity <= 100) {\n      data = { id: id, title: title, quantity: Math.floor(quantity) };\n    } else {\n      data = { id: id, title: title, quantity: 0 };\n    }\n    handleEditProduct(data);\n  };\n\n  const handleDeleteChange = (id) => {\n    setEditProductId(id);\n    setOrderType(\"deleteOrder\");\n    setIsconfirmDialogOpen(true);\n  };\n\n  const handleConfirmChange = (data) => {\n    if (orderType === \"deleteOrder\") {\n      handleEditProduct(data);\n    }\n  };\n\n  const handleConfirmationDialogBoxClose = () => {\n    setIsconfirmDialogOpen(false);\n    if (orderType === \"deleteOrder\") {\n      setOrderType(\"placeOrder\");\n      setEditProductId(\"\");\n    }\n  };\n\n  const handleNav = (value) => {\n    let path = `/app/${value}`;\n    navigate(path);\n  };\n\n  const handleProductView = (id, title) => {\n    console.log(title);\n    navigate(`/app/products/${id}/${title}`);\n  };\n\n  return (\n    <Page title=\"Cart\">\n      <Box className={customStyles.mainBlock} maxWidth={\"lg\"}>\n        <Container maxWidth=\"sm\">\n          {cart && cart.length > 0 ? (\n            cart.map((product, id) => (\n              <Grid\n                container\n                key={id}\n                className={customStyles.cartBlock}\n                sx={{\n                  borderRadius: \"4px\",\n                  boxShadow: \"0 1px 6px rgba(0,0,0, 0.095389)\",\n                  backgroundColor: \"rgba(255,255,255, 1)\",\n                  borderTop: \"1px solid #E5E5E5\",\n                  marginTop: \"10px\",\n                  marginBottom: \"10px\",\n                }}\n              >\n                <Grid item xs={4} className={customStyles.imageBlock}>\n                  <Avatar\n                    variant=\"square\"\n                    src={`https://${product.image_0}`}\n                    alt={product.title}\n                    className={customStyles.image}\n                    key={product.id}\n                    onClick={() => handleProductView(product.id, product.title)}\n                  />\n                </Grid>\n                <Grid item xs={7} className={customStyles.contentBlock}>\n                  <Typography className={customStyles.title}>\n                    {product.title}\n                  </Typography>\n\n                  <Typography className={customStyles.price}>\n                    Rs. {thousands_separators(product.price)}\n                  </Typography>\n                  <Box className={customStyles.favQuantity}>\n                    <Box\n                      sx={{\n                        border: \"0.1px solid #bdbdbd\",\n                        marginRight: \"10px\",\n                      }}\n                    >\n                      <IconButton\n                        className={customStyles.favIcon}\n                        onClick={() =>\n                          handleFavouriteClick(\n                            product.id,\n                            product.title,\n                            product.is_favourite\n                          )\n                        }\n                      >\n                        {product.is_favourite ? (\n                          <FavoriteIcon\n                            sx={{\n                              color: \"red\",\n                              fontSize: \"35px\",\n                              padding: \"1px\",\n                            }}\n                          />\n                        ) : (\n                          <FavoriteBorderIcon\n                            sx={{\n                              fontSize: \"35px\",\n                              padding: \"1px\",\n                            }}\n                          />\n                        )}\n                      </IconButton>\n                    </Box>\n                    <TextField\n                      type=\"number\"\n                      color=\"secondary\"\n                      value={product.quantity > 0 ? product.quantity : \"\"}\n                      pattern=\"[0-9]\"\n                      className={customStyles.quantity}\n                      onChange={(e) =>\n                        handleQuantityChange(\n                          product.id,\n                          product.title,\n                          e.target.value\n                        )\n                      }\n                    />\n                  </Box>\n                </Grid>\n                <Grid item xs={1}>\n                  <IconButton\n                    sx={{ position: \"absolute\", right: \"0\", top: \"35px\" }}\n                    onClick={() => handleDeleteChange(product.id)}\n                  >\n                    <DeleteIcon sx={{ color: \"#474747\" }} />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            ))\n          ) : (\n            <Message>Your Cart is Empty.</Message>\n          )}\n        </Container>\n        <Container\n          maxWidth=\"sm\"\n          className={customStyles.rightBlock}\n          sx={{\n            borderRadius: \"4px\",\n            boxShadow: \"0 1px 6px rgba(0,0,0, 0.095389)\",\n            backgroundColor: \"rgba(255,255,255, 1)\",\n            borderTop: \"1px solid #E5E5E5\",\n            padding: \"30px\",\n          }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginBottom: \"16px\",\n            }}\n          >\n            <Typography\n              sx={{\n                fontSize: \"24px\",\n                fontWeight: \"600\",\n                lineHeight: \"27px\",\n              }}\n            >\n              Total\n            </Typography>\n            <Typography\n              sx={{\n                fontSize: \"21px\",\n                fontWeight: \"500\",\n                lineHeight: \"27px\",\n              }}\n            >\n              Rs.{\" \"}\n              {thousands_separators(\n                cart\n                  .reduce((acc, item) => acc + item.quantity * item.price, 0)\n                  .toFixed(2)\n              )}\n            </Typography>\n          </Box>\n          <Typography marginBottom=\"16px\">\n            Tax included and shipping calculated at checkout\n          </Typography>\n          <Typography marginBottom=\"16px\">\n            Orders will be processed in INR.\n          </Typography>\n\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              marginTop: { xs: \"12px\" },\n            }}\n          >\n            <Button variant=\"outlined\" onClick={() => handleNav(\"products\")}>\n              shop more\n            </Button>\n\n            {localStorage.getItem(\"token\") &&\n            cart\n              .reduce((acc, item) => acc + item.quantity * item.price, 0)\n              .toFixed(2) > 0 ? (\n              <Button variant=\"contained\" onClick={() => handleNav(\"checkout\")}>\n                proceed to checkout\n              </Button>\n            ) : (\n              <Button disabled>CHECKOUT</Button>\n            )}\n          </Box>\n          {!localStorage.getItem(\"token\") ? (\n            <Button\n              variant=\"contained\"\n              sx={{ marginTop: \"16px\" }}\n              onClick={() => navigate(\"/login\")}\n            >\n              Proceed to login\n            </Button>\n          ) : null}\n        </Container>\n      </Box>\n\n      <ConfirmationDialogBox\n        open={isconfirmDialogOpen}\n        handleClose={handleConfirmationDialogBoxClose}\n        handleConfirm={handleConfirmChange}\n        type={orderType}\n        isLoadingSpin={isLoadingSpin}\n        productId={editProductId}\n      />\n    </Page>\n  );\n};\n\nexport default CartPage;\n"],"sourceRoot":""}