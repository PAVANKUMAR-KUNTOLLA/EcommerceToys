{"version":3,"sources":["webpack:///./src/constants/index.js","webpack:///./src/views/Products/products.page.js"],"names":["charactersList","categoriesList","priceRangesList","useStyles","makeStyles","theme","_acordinBlock","mainBlock","_defineProperty","display","flexDirection","breakpoints","up","acordinBlock","width","height","down","accordionContent","fontWeight","ProductsPage","customStyles","params","useParams","products","useSelector","state","dispatch","useDispatch","navigate","useNavigate","_useImmer2","_slicedToArray","useImmer","category","character","price","productFilters","updateProductFilters","_useState2","useState","expanded","setExpanded","_useState4","loadingSpin","setLoadingSpin","categoryProducts","filter","product","handleFetchProducts","privateApiGET","Api","then","response","status","data","console","log","setProducts","error","handleFetchFilterProducts","payload","privateApiPOST","concat","handleAccordionChange","panel","event","isExpanded","React","createElement","Page","title","Container","maxWidth","Typography","variant","alignItems","marginTop","bordertop","className","Accordion","onChange","AccordionSummary","expandIcon","ExpandMoreIcon","id","AccordionDetails","List","map","item","index","ListItem","key","disablePadding","ListItemButton","onClick","toLowerCase","draft","ListItemText","primary","container","length","Grid","spacing","mt","xs","md","ProductCard"],"mappings":"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","file":"products.page.js","sourcesContent":["export const charactersList = [\n  \"Avengers\",\n  \"Marvel\",\n  \"My Hero\",\n  \"Transformers\",\n  \"Spiderman\",\n  \"Jurassic\",\n  \"Game of Thrones\",\n  \"The Flash\",\n  \"Batman\",\n];\nexport const categoriesList = [\n  \"Accessories\",\n  \"Action-figures\",\n  \"Statue\",\n  \"Collectibles\",\n  \"T-shirt\",\n];\nexport const priceRangesList = [\n  \"0-999\",\n  \"1000-9999\",\n  \"10000-99999\",\n  \"above 100000\",\n];\nexport const profilePageList = [\n  \"Order History\",\n  \"Favourite\",\n  \"Account Details\",\n  \"Payment Methods\",\n  \"My Addresses\",\n];\n","import React, { useState, useEffect } from \"react\";\nimport { useImmer } from \"use-immer\";\nimport Page from \"../../components/Page\";\nimport ProductCard from \"../../components/card\";\nimport { Grid, Container, Typography } from \"@mui/material\";\n\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport Api from \"../../components/Api\";\n\nimport { makeStyles } from \"@mui/styles\";\n\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport {\n  charactersList,\n  categoriesList,\n  priceRangesList,\n} from \"../../constants/index\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setProducts } from \"../../redux/products/produtsSlice\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nexport const useStyles = makeStyles((theme) => ({\n  mainBlock: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    [theme.breakpoints.up(\"md\")]: {\n      flexDirection: \"row\",\n    },\n  },\n  acordinBlock: {\n    width: \"30%\",\n    height: \"auto\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  accordionContent: {\n    \"&.MuiListItemText-primary\": {\n      fontWeight: \"700\",\n    },\n  },\n}));\n\nconst ProductsPage = () => {\n  const customStyles = useStyles();\n  const params = useParams();\n  const products = useSelector((state) => state.products.products);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [productFilters, updateProductFilters] = useImmer({\n    category: params.category,\n    character: null,\n    price: null,\n  });\n  const [expanded, setExpanded] = useState(false);\n  const [loadingSpin, setLoadingSpin] = useState(false);\n\n  const categoryProducts = products.filter(\n    (product) => product.category === params.category\n  );\n\n  const handleFetchProducts = () => {\n    setLoadingSpin(true);\n    privateApiGET(Api.products)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          dispatch(setProducts(data?.data));\n          setLoadingSpin(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setLoadingSpin(false);\n      });\n  };\n\n  const handleFetchFilterProducts = (data) => {\n    setLoadingSpin(true);\n    let payload = data;\n    privateApiPOST(Api.products, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          dispatch(setProducts(data?.data));\n          setLoadingSpin(false);\n          if (\"category\" in payload && params.payload != payload[\"category\"]) {\n            navigate(`/app/products/categories/${payload[\"category\"]}`);\n          }\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setLoadingSpin(false);\n      });\n  };\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  const handleCategoryFilterClick = (category) => {\n    if (productFilters[\"category\"] === category) {\n      updateProductFilters((draft) => {\n        draft.category = null;\n      });\n      handleFetchProducts();\n      navigate(\"/app/products\");\n    } else {\n      updateProductFilters((draft) => {\n        draft.category = category;\n      });\n      let data = {\n        category: category,\n        // price: productFilters[\"price\"],\n        // character: productFilters[\"character\"],\n      };\n      handleFetchFilterProducts(data);\n    }\n  };\n  const handleCharacterFilterClick = (character) => {\n    let data = {};\n    if (productFilters[\"character\"] === character) {\n      updateProductFilters((draft) => {\n        draft.character = null;\n      });\n      handleFetchProducts();\n      navigate(\"/app/products\");\n    } else {\n      updateProductFilters((draft) => {\n        draft.character = character;\n      });\n      data = {\n        // category: productFilters[\"category\"],\n        // price: productFilters[\"price\"],\n        character: character,\n      };\n      handleFetchFilterProducts(data);\n    }\n    navigate(\"/app/products\");\n  };\n  const handlePriceFilterClick = (price) => {\n    let data = {};\n    if (productFilters[\"price\"] === price) {\n      updateProductFilters((draft) => {\n        draft.price = null;\n      });\n      handleFetchProducts();\n    } else {\n      updateProductFilters((draft) => {\n        draft.price = price;\n      });\n      data = {\n        price: price,\n        // category: productFilters[\"category\"],\n        // character: productFilters[\"character\"],\n      };\n      handleFetchFilterProducts(data);\n      navigate(\"/app/products\");\n    }\n  };\n\n  return (\n    <Page title=\"products\">\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h1\" alignItems=\"left\" marginTop=\"36px\">\n          Products\n        </Typography>\n        <hr bordertop=\"2px solid black\" fontWeight=\"bold\"></hr>\n      </Container>\n      <Container maxWidth=\"lg\" className={customStyles.mainBlock}>\n        <Container className={customStyles.acordinBlock}>\n          <Accordion\n            expanded={expanded === \"panel1a\"}\n            onChange={handleAccordionChange(\"panel1a\")}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography>CHARACTER</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <List>\n                {charactersList.map((item, index) => (\n                  <ListItem key={index} disablePadding>\n                    <ListItemButton\n                      onClick={() =>\n                        handleCharacterFilterClick(item.toLowerCase())\n                      }\n                    >\n                      <ListItemText primary={item} />\n                    </ListItemButton>\n                  </ListItem>\n                ))}\n              </List>\n            </AccordionDetails>\n          </Accordion>\n          <Accordion\n            expanded={expanded === \"panel2a\"}\n            onChange={handleAccordionChange(\"panel2a\")}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2a-content\"\n              id=\"panel2a-header\"\n            >\n              <Typography>CATEGORY</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <List>\n                {categoriesList.map((item, index) => (\n                  <ListItem key={index} disablePadding>\n                    <ListItemButton\n                      onClick={() =>\n                        handleCategoryFilterClick(item.toLowerCase())\n                      }\n                    >\n                      <ListItemText primary={item} />\n                    </ListItemButton>\n                  </ListItem>\n                ))}\n              </List>\n            </AccordionDetails>\n          </Accordion>\n          <Accordion\n            expanded={expanded === \"panel3a\"}\n            onChange={handleAccordionChange(\"panel3a\")}\n          >\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel3a-content\"\n              id=\"panel3a-header\"\n            >\n              <Typography>PRICE</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <List>\n                {priceRangesList.map((item, index) => (\n                  <ListItem key={index} disablePadding>\n                    <ListItemButton\n                      onClick={() => handlePriceFilterClick(item)}\n                    >\n                      <ListItemText primary={item} />\n                    </ListItemButton>\n                  </ListItem>\n                ))}\n              </List>\n            </AccordionDetails>\n          </Accordion>\n        </Container>\n        <Container maxWidth=\"md\" className={customStyles.container}>\n          {params.category && products.length > 0 && !loadingSpin ? (\n            <Grid container spacing={2} mt={2}>\n              {categoryProducts.map((product, id) => {\n                return (\n                  <Grid item key={id} xs={6} md={4}>\n                    <ProductCard key={id} product={product} />\n                  </Grid>\n                );\n              })}\n            </Grid>\n          ) : !params.category && products.length > 0 && !loadingSpin ? (\n            <Grid container spacing={2} mt={2}>\n              {products.map((product, id) => {\n                return (\n                  <Grid item key={id} xs={6} md={4}>\n                    <ProductCard key={id} product={product} />\n                  </Grid>\n                );\n              })}\n            </Grid>\n          ) : null}\n        </Container>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ProductsPage;\n"],"sourceRoot":""}