{"version":3,"sources":["webpack:///./src/views/Profile/profile.page.js","webpack:///./src/components/Page.js"],"names":["customProfileStyles","makeStyles","theme","mainBlock","marginTop","justifyContent","alignItems","alignSelf","textAlign","width","account","_defineProperty","breakpoints","down","maxWidth","marginBottom","title","textTransform","color","fontSize","fontWeight","letterSpacing","subTitle","ProfilePage","name","_useState2","_slicedToArray","useState","navigate","useNavigate","customStyles","dispatch","useDispatch","_useState4","id","email","orderHistory","visitHistory","userInfo","setUserInfo","handleProductView","console","log","concat","replace","useEffect","setLoadingSpin","privateApiGET","Api","profile","then","response","status","data","info","prev","_objectSpread","orders","products","error","React","createElement","Page","Container","className","Box","Avatar","_extends","split","length","children","sx","height","backgroundColor","marginLeft","marginRight","Typography","TableContainer","component","Paper","Table","PerfectScrollbar","style","maxHeight","TableHead","TableRow","TableCell","align","TableBody","map","row","key","border","cursor","onClick","scope","quantity","order_date","view_count","visited_at","forwardRef","_ref","ref","_ref$title","rest","_objectWithoutProperties","_excluded","Helmet","propTypes","PropTypes","node","isRequired","string"],"mappings":"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","file":"profile.page.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Page from \"../../components/Page\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Avatar,\n  Typography,\n  TextField,\n  useMediaQuery,\n  Button,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nimport Api from \"../../components/Api\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\nimport { setLoadingSpin } from \"../../redux/products/produtsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nconst customProfileStyles = makeStyles((theme) => ({\n  mainBlock: {\n    marginTop: \"50px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n  account: {\n    justifyContent: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      maxWidth: \"100%\",\n      marginBottom: \"10px\",\n    },\n  },\n  title: {\n    textTransform: \"uppercase\",\n    color: \"#3e4152\",\n    fontSize: \"28px\",\n    fontWeight: \"700\",\n    marginTop: \"34px\",\n    marginBottom: \"10px\",\n    letterSpacing: \"1.5px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"0\",\n      fontSize: \"20px\",\n      letterSpacing: \"0.5px\",\n    },\n  },\n  subTitle: {\n    textTransform: \"uppercase\",\n    color: \"#3e4152\",\n    fontSize: \"20px\",\n    fontWeight: \"500\",\n    textAlign: \"left\",\n    marginTop: \"24px\",\n    letterSpacing: \"1px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"16px\",\n      letterSpacing: \"0.5px\",\n    },\n  },\n}));\n\nconst ProfilePage = () => {\n  const [expanded, setExpanded] = useState(false);\n  const navigate = useNavigate();\n\n  const customStyles = customProfileStyles();\n  const dispatch = useDispatch();\n  const [userInfo, setUserInfo] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    orderHistory: [],\n    visitHistory: [],\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setAddress((prevAddress) => ({\n      ...prevAddress,\n      [name]: value,\n    }));\n  };\n\n  const handleProductView = (id, title) => {\n    console.log(title);\n    const regex = /[^a-zA-Z0-9-]/g;\n    navigate(\n      `/app/products/${id}/${title.replace(/ /g, \"-\").replace(regex, \"\")}`\n    );\n  };\n\n  const handleFetchProfileData = () => {\n    dispatch(setLoadingSpin(true));\n    privateApiGET(Api.profile)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          let info = data?.data;\n          setUserInfo((prev) => ({\n            ...prev,\n            id: info.id,\n            name: info.name,\n            email: info.email,\n            orderHistory: info.orders,\n            visitHistory: info.products,\n          }));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n\n  const handleAccordionChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  function stringAvatar(name) {\n    if (name.split(\" \").length == 1) {\n      return {\n        children: `${name.split(\" \")[0][0]}`,\n      };\n    }\n    return {\n      children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\n    };\n  }\n\n  useEffect(() => {\n    handleFetchProfileData();\n  }, []);\n\n  return (\n    <Page title=\"Profile\">\n      <Container maxWidth=\"md\" className={customStyles.mainBlock}>\n        <Box className={customStyles.account}>\n          {userInfo.name && (\n            <Avatar\n              {...stringAvatar(userInfo.name)}\n              sx={{\n                width: \"100px\",\n                height: \"100px\",\n                fontSize: \"48px\",\n                color: \"white\",\n                backgroundColor: \"rgb(0,76,153,0.8)\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n              }}\n            />\n          )}\n          <Typography className={customStyles.title}>\n            {userInfo.name}\n          </Typography>\n        </Box>\n\n        <Box maxWidth={\"sm\"} sx={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n          <Typography className={customStyles.subTitle}>\n            Order History\n          </Typography>\n\n          <TableContainer component={Paper} sx={{ marginTop: \"35px\" }}>\n            <Table sx={{ maxWidth: \"sm\" }} aria-label=\"simple table\">\n              <PerfectScrollbar style={{ maxHeight: \"350px\" }}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">Title</TableCell>\n                    <TableCell align=\"left\">Quantity</TableCell>\n                    <TableCell align=\"left\">Ordered Date</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {userInfo[\"orderHistory\"].map((row) => (\n                    <TableRow\n                      key={row.id}\n                      sx={{\n                        \"&:last-child td, &:last-child th\": { border: 0 },\n                        cursor: \"pointer\",\n                      }}\n                      onClick={() => handleProductView(row.id, row.title)}\n                    >\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.title}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.quantity}</TableCell>\n                      <TableCell align=\"left\">{row.order_date}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </PerfectScrollbar>\n            </Table>\n          </TableContainer>\n        </Box>\n\n        <Box maxWidth={\"sm\"} sx={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n          <Typography className={customStyles.subTitle}>\n            Recently Visited\n          </Typography>\n\n          <TableContainer\n            component={Paper}\n            sx={{\n              marginTop: \"20px\",\n            }}\n          >\n            <Table sx={{ maxWidth: \"md\" }} aria-label=\"simple table\">\n              <PerfectScrollbar style={{ maxHeight: \"350px\" }}>\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">Title</TableCell>\n                    <TableCell align=\"left\">Count</TableCell>\n                    <TableCell align=\"left\">Viewed_at</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {userInfo[\"visitHistory\"].map((row) => (\n                    <TableRow\n                      key={row.id}\n                      sx={{\n                        \"&:last-child td, &:last-child th\": { border: 0 },\n                        cursor: \"pointer\",\n                      }}\n                      onClick={() => handleProductView(row.id, row.title)}\n                    >\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.title}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.view_count}</TableCell>\n                      <TableCell align=\"left\">{row.visited_at}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </PerfectScrollbar>\n            </Table>\n          </TableContainer>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ProfilePage;\n","import React, { forwardRef } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nconst Page = forwardRef(({ children, title = \"\", ...rest }, ref) => {\n  return (\n    <div ref={ref} {...rest}>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n"],"sourceRoot":""}