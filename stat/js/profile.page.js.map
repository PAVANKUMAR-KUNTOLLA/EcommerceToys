{"version":3,"sources":["webpack:///./src/views/Profile/profile.page.js"],"names":["customProfileStyles","makeStyles","theme","mainBlock","marginTop","justifyContent","alignItems","alignSelf","textAlign","width","account","_defineProperty","breakpoints","down","maxWidth","marginBottom","title","textTransform","color","fontSize","fontWeight","letterSpacing","subTitle","ProfilePage","name","navigate","useNavigate","_useState2","_slicedToArray","useState","scrollEl","setScrollEl","customStyles","dispatch","useDispatch","_useState4","id","email","orderHistory","visitHistory","userInfo","setUserInfo","handleProductView","console","log","concat","replace","useEffect","scrollTop","setLoadingSpin","privateApiGET","Api","profile","then","response","status","data","info","prev","_objectSpread","order_history","history","error","React","createElement","Page","Container","className","Box","Avatar","_extends","split","length","children","sx","height","backgroundColor","marginLeft","marginRight","Typography","TableContainer","component","Paper","maxHeight","PerfectScrollbar","containerRef","ref","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","border","cursor","onClick","scope","quantity","order_date","view_count","visited_at"],"mappings":"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","file":"profile.page.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Page from \"../../components/Page\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Avatar,\n  Typography,\n  TextField,\n  useMediaQuery,\n  Button,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nimport Api from \"../../components/Api\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\nimport { setLoadingSpin } from \"../../redux/products/produtsSlice\";\nimport { useDispatch } from \"react-redux\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nconst customProfileStyles = makeStyles((theme) => ({\n  mainBlock: {\n    marginTop: \"50px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n  account: {\n    justifyContent: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      maxWidth: \"100%\",\n      marginBottom: \"10px\",\n    },\n  },\n  title: {\n    textTransform: \"uppercase\",\n    color: \"#3e4152\",\n    fontSize: \"28px\",\n    fontWeight: \"700\",\n    marginTop: \"34px\",\n    marginBottom: \"10px\",\n    letterSpacing: \"1.5px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"0\",\n      fontSize: \"20px\",\n      letterSpacing: \"0.5px\",\n    },\n  },\n  subTitle: {\n    textTransform: \"uppercase\",\n    color: \"#3e4152\",\n    fontSize: \"20px\",\n    fontWeight: \"500\",\n    textAlign: \"left\",\n    marginTop: \"24px\",\n    letterSpacing: \"1px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"16px\",\n      letterSpacing: \"0.5px\",\n    },\n  },\n}));\n\nconst ProfilePage = () => {\n  const navigate = useNavigate();\n\n  const [scrollEl, setScrollEl] = useState();\n\n  const customStyles = customProfileStyles();\n  const dispatch = useDispatch();\n  const [userInfo, setUserInfo] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    orderHistory: [],\n    visitHistory: [],\n  });\n\n  const handleProductView = (id, title) => {\n    console.log(title);\n    const regex = /[^a-zA-Z0-9-]/g;\n    navigate(\n      `/app/products/${id}/${title.replace(/ /g, \"-\").replace(regex, \"\")}`\n    );\n  };\n\n  const handleFetchProfileData = () => {\n    dispatch(setLoadingSpin(true));\n    privateApiGET(Api.profile)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          let info = data?.data;\n          setUserInfo((prev) => ({\n            ...prev,\n            id: info.id,\n            name: info.name,\n            email: info.email,\n            orderHistory: info.order_history,\n            visitHistory: info.history,\n          }));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n\n  function stringAvatar(name) {\n    if (name.split(\" \").length == 1) {\n      return {\n        children: `${name.split(\" \")[0][0]}`,\n      };\n    }\n    return {\n      children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\n    };\n  }\n\n  useEffect(() => {\n    if (scrollEl) {\n      scrollEl.scrollTop = 100;\n    }\n  }, [scrollEl]);\n\n  useEffect(() => {\n    handleFetchProfileData();\n  }, []);\n\n  return (\n    <Page title=\"Profile\">\n      <Container maxWidth=\"md\" className={customStyles.mainBlock}>\n        <Box className={customStyles.account}>\n          {userInfo.name && (\n            <Avatar\n              {...stringAvatar(userInfo.name)}\n              sx={{\n                width: \"100px\",\n                height: \"100px\",\n                fontSize: \"48px\",\n                color: \"white\",\n                backgroundColor: \"rgb(0,76,153,0.8)\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n              }}\n            />\n          )}\n          <Typography className={customStyles.title}>\n            {userInfo.name}\n          </Typography>\n        </Box>\n\n        <Box maxWidth={\"sm\"} sx={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n          <Typography className={customStyles.subTitle}>\n            Order History\n          </Typography>\n\n          <TableContainer\n            component={Paper}\n            sx={{ marginTop: \"35px\", maxHeight: \"350px\" }}\n          >\n            <PerfectScrollbar\n              containerRef={(ref) => {\n                setScrollEl(ref);\n              }}\n            >\n              <Table sx={{ maxWidth: \"sm\" }} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">Title</TableCell>\n                    <TableCell align=\"left\">Quantity</TableCell>\n                    <TableCell align=\"left\">Date</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {userInfo[\"orderHistory\"].map((row) => (\n                    <TableRow\n                      key={row.id}\n                      sx={{\n                        \"&:last-child td, &:last-child th\": { border: 0 },\n                        cursor: \"pointer\",\n                      }}\n                      onClick={() => handleProductView(row.id, row.title)}\n                    >\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.title}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.quantity}</TableCell>\n                      <TableCell align=\"left\">{row.order_date}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </PerfectScrollbar>\n          </TableContainer>\n        </Box>\n\n        <Box maxWidth={\"sm\"} sx={{ marginLeft: \"auto\", marginRight: \"auto\" }}>\n          <Typography className={customStyles.subTitle}>\n            Recently Visited\n          </Typography>\n\n          <TableContainer\n            component={Paper}\n            sx={{\n              marginTop: \"20px\",\n              maxHeight: \"350px\",\n            }}\n          >\n            <PerfectScrollbar\n              containerRef={(ref) => {\n                setScrollEl(ref);\n              }}\n            >\n              <Table sx={{ maxWidth: \"md\" }} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">Title</TableCell>\n                    <TableCell align=\"left\">Count</TableCell>\n                    <TableCell align=\"left\">Viewed_at</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {userInfo[\"visitHistory\"].map((row) => (\n                    <TableRow\n                      key={row.id}\n                      sx={{\n                        \"&:last-child td, &:last-child th\": { border: 0 },\n                        cursor: \"pointer\",\n                      }}\n                      onClick={() => handleProductView(row.id, row.title)}\n                    >\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.title}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.view_count}</TableCell>\n                      <TableCell align=\"left\">{row.visited_at}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </PerfectScrollbar>\n          </TableContainer>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default ProfilePage;\n"],"sourceRoot":""}