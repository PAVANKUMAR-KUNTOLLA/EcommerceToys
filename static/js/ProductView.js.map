{"version":3,"sources":["webpack:///./src/views/Products/ProductView.js"],"names":["productViewCustomStyles","makeStyles","theme","mainBlock","_defineProperty","display","justifyContent","alignItems","flexDirection","breakpoints","up","leftBlock","width","marginLeft","marginTop","marginRight","down","largeImage","position","mainImage","height","refImages","overflowX","scrollbarWidth","msOverflowStyle","scrollbarColor","smallImage","cursor","rightBlock","marginBottom","title","fontSize","fontWeight","lineHeight","price","buttonContainer","button","description","paragraph","relevantProducts","maxWidth","relatedProductsTitle","textTransform","color","letterSpacing","ProductViewPage","params","useParams","products","useSelector","state","dispatch","useDispatch","currProduct","find","product","id","parseInt","currProductRef","useRef","filter","startsWith","category","_useState2","_slicedToArray","useState","currentSlide","setCurrentSlide","_useState4","isFavLoadingSpin","setIsFavLoadingSpin","_useState6","isCartLoadingSpin","setIsCartLoadingSpin","customStyles","handleRecordVisitHistory","payload","privateApiPOST","Api","record_visit","then","response","status","data","console","log","message","error","handleEditProduct","edit_product","setProducts","useEffect","current","setSearch","React","createElement","Page","length","Box","sx","className","Avatar","variant","src","concat","alt","Array","from","keys","map","index","key","component","activeImage","onClick","handleSlide","Typography","thousands_separators","Button","is_favourite","CircularProgress","size","is_item_in_cart","quantity","split","line","trim","Fragment","ProductSlider"],"mappings":"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","file":"ProductView.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Page from \"../../components/Page\";\nimport axios from \"axios\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport {\n  Container,\n  Box,\n  Typography,\n  Button,\n  Avatar,\n  CircularProgress,\n  Grid,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\n\nimport { privateApiGET, privateApiPOST } from \"../../components/PrivateRoute\";\nimport Api from \"../../components/Api\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setProducts, setSearch } from \"../../redux/products/produtsSlice\";\nimport ProductSlider from \"../../components/slider\";\nimport { thousands_separators } from \"../../utils\";\n\nconst productViewCustomStyles = makeStyles((theme) => ({\n  mainBlock: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    [theme.breakpoints.up(\"md\")]: {\n      flexDirection: \"row\",\n    },\n  },\n  leftBlock: {\n    width: \"40vw\",\n    marginLeft: \"5vw\",\n    marginTop: \"1rem\",\n    marginRight: \"5vw\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"80vw\",\n      marginLeft: \"10vw\",\n      marginRight: \"10vw\",\n    },\n  },\n  largeImage: {\n    position: \"relative\",\n  },\n  mainImage: {\n    position: \"relative\",\n    width: \"100%\",\n    height: \"auto\",\n  },\n\n  refImages: {\n    marginTop: \"1rem\",\n    display: \"flex\",\n    width: \"100%\",\n    overflowX: \"scroll\",\n    scrollbarWidth: \"none\",\n    msOverflowStyle: \"none\",\n    scrollbarColor: \"transparent\",\n    \"&::-webkit-scrollbar\": {\n      width: \"0px\", // Hide the scrollbar for Chrome, Safari, and newer Edge\n    },\n  },\n  smallImage: {\n    width: \"100px\",\n    marginRight: \"10px\",\n    cursor: \"pointer\",\n  },\n  rightBlock: {\n    width: \"40vw\",\n    marginRight: \"10vw\",\n    marginTop: \"5rem\",\n    marginBottom: \"auto\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"80vw\",\n      marginLeft: \"10vw\",\n      marginRight: \"10vw\",\n      marginTop: \"1rem\",\n    },\n  },\n\n  title: {\n    fontSize: \"24px\",\n    fontWeight: \"540\",\n    lineHeight: \"27px\",\n    marginBottom: \"16px\",\n  },\n  price: {\n    fontWeight: \"700\",\n    fontSize: \"21px\",\n    lineHeight: \"24px\",\n    marginBottom: \"24px\",\n  },\n\n  buttonContainer: {\n    justifyContent: \"center\",\n    marginTop: \"1rem\",\n  },\n\n  button: {\n    marginRight: \"1rem\",\n  },\n\n  description: {\n    fontSize: \"21px\",\n    fontWeight: \"600\",\n    lineHeight: \"24px\",\n    marginTop: \"36px\",\n    marginBottom: \"-24px\",\n  },\n  paragraph: {\n    fontSize: \"16px\",\n    fontWeight: \"400\",\n    lineHeight: \"19px\",\n  },\n  relevantProducts: {\n    maxWidth: \"80vw\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    // [theme.breakpoints.down(\"sm\")]: {\n    //   maxWidth: \"80vw\",\n    // },\n  },\n  relatedProductsTitle: {\n    textTransform: \"uppercase\",\n    color: \"#3e4152\",\n    fontSize: \"28px\",\n    fontWeight: \"700\",\n    marginTop: \"34px\",\n    marginBottom: \"10px\",\n    letterSpacing: \"1.5px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"0\",\n      fontSize: \"20px\",\n      letterSpacing: \"0.5px\",\n      marginBottom: \"0px\",\n    },\n  },\n}));\n\nconst ProductViewPage = () => {\n  const params = useParams();\n  const products = useSelector((state) => state.products.products);\n  const dispatch = useDispatch();\n  const currProduct = products.find(\n    (product) => product.id === parseInt(params.id)\n  );\n  let currProductRef = useRef(params.id);\n  const relevantProducts = currProduct\n    ? products.filter(\n        (product) =>\n          (product.title.startsWith(currProduct[\"title\"]) ||\n            product.category === currProduct[\"category\"]) &&\n          product.id != params.id\n      )\n    : [];\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isFavLoadingSpin, setIsFavLoadingSpin] = useState(false);\n  const [isCartLoadingSpin, setIsCartLoadingSpin] = useState(false);\n  const customStyles = productViewCustomStyles();\n\n  const handleSlide = (index) => {\n    setCurrentSlide(index);\n  };\n\n  const handleRecordVisitHistory = () => {\n    let payload = { id: params.id };\n    privateApiPOST(Api.record_visit, payload)\n      .then((response) => {\n        const { status, data } = response;\n        console.log(\"data\", data?.message);\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n\n  const handleEditProduct = (data) => {\n    let payload = data;\n    privateApiPOST(Api.edit_product, payload)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          dispatch(setProducts(data?.data));\n          setIsFavLoadingSpin(false);\n          setIsCartLoadingSpin(false);\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        setIsFavLoadingSpin(false);\n        setIsCartLoadingSpin(false);\n      });\n  };\n\n  const handleFavouriteClick = () => {\n    const data = {\n      id: currProduct.id,\n      title: currProduct.title,\n      is_favourite: !currProduct.is_favourite,\n    };\n    setIsFavLoadingSpin(true);\n    handleEditProduct(data);\n  };\n\n  const handleAddToCartClick = () => {\n    const data = {\n      id: currProduct.id,\n      title: currProduct.title,\n      is_item_in_cart: !currProduct.is_item_in_cart,\n      quantity: currProduct.quantity + 1,\n    };\n    setIsCartLoadingSpin(true);\n    handleEditProduct(data);\n  };\n\n  useEffect(() => {\n    if (params.id !== currProductRef.current) {\n      handleRecordVisitHistory();\n      setCurrentSlide(0);\n    }\n  }, [currProduct]);\n\n  useEffect(() => {\n    dispatch(setSearch(false));\n    handleRecordVisitHistory();\n  }, []);\n\n  return (\n    <Page title=\"products\">\n      {products.length > 0 && currProduct ? (\n        <Box sx={{ marginTop: \"10px\" }}>\n          <Box className={customStyles.mainBlock}>\n            <Box className={customStyles.leftBlock}>\n              <Box className={customStyles.largeImage}>\n                <Box sx={{ position: \"relative\" }}>\n                  <Avatar\n                    className={customStyles.mainImage}\n                    variant=\"square\"\n                    src={`https://${currProduct[`image_${currentSlide}`]}`}\n                    alt={`Slide ${currentSlide + 1}`}\n                  />\n                </Box>\n              </Box>\n              <Box className={customStyles.refImages}>\n                {Array.from(Array(15).keys()).map((index) => (\n                  <Box\n                    key={index}\n                    component=\"img\"\n                    className={`${customStyles.smallImage} ${\n                      index === currentSlide ? customStyles.activeImage : \"\"\n                    }`}\n                    src={`https://${currProduct[`image_${index}`]}`}\n                    alt={`Reference ${index + 1}`}\n                    onClick={() => handleSlide(index)}\n                  />\n                ))}\n              </Box>\n            </Box>\n            <Box className={customStyles.rightBlock}>\n              <Typography className={customStyles.title}>\n                {currProduct.title}\n              </Typography>\n              {currProduct && currProduct[\"price\"] && (\n                <Typography className={customStyles.price}>\n                  Rs. {thousands_separators(currProduct.price)}\n                </Typography>\n              )}\n              <Box className={customStyles.buttonContainer}>\n                <Button\n                  variant={currProduct.is_favourite ? \"contained\" : \"outlined\"}\n                  onClick={handleFavouriteClick}\n                  className={customStyles.button}\n                >\n                  ADD TO FAV{\" \"}\n                  {isFavLoadingSpin && (\n                    <CircularProgress\n                      size={15}\n                      color={currProduct.is_favourite ? \"secondary\" : \"primary\"}\n                      sx={{ marginLeft: \"15px\" }}\n                    />\n                  )}\n                </Button>\n                <Button\n                  variant={\n                    currProduct.is_item_in_cart ? \"contained\" : \"outlined\"\n                  }\n                  onClick={handleAddToCartClick}\n                  className={customStyles.button}\n                >\n                  ADD TO CART{\" \"}\n                  {isCartLoadingSpin && (\n                    <CircularProgress\n                      size={15}\n                      color={\n                        currProduct.is_item_in_cart ? \"secondary\" : \"primary\"\n                      }\n                      sx={{ marginLeft: \"15px\" }}\n                    />\n                  )}\n                </Button>\n              </Box>\n              <Typography className={customStyles.description}>\n                Description:\n              </Typography>\n              {currProduct && currProduct[\"description\"] && (\n                <Box className={customStyles.description}>\n                  {currProduct[\"description\"].split(\"\\n\").map(\n                    (line, index) =>\n                      line.trim() !== \"\" && (\n                        <React.Fragment key={index}>\n                          <Typography className={customStyles.paragraph}>\n                            {line}\n                          </Typography>\n                          <Typography>\n                            <br></br>\n                          </Typography>\n                        </React.Fragment>\n                      )\n                  )}\n                </Box>\n              )}\n            </Box>\n          </Box>\n          {relevantProducts.length > 0 && (\n            <Box\n              sx={{ marginTop: \"36px\", marginBottom: \"48px\" }}\n              className={customStyles.relevantProducts}\n            >\n              <Typography className={customStyles.relatedProductsTitle}>\n                Related products\n              </Typography>\n              <ProductSlider products={relevantProducts} />\n            </Box>\n          )}\n        </Box>\n      ) : null}\n    </Page>\n  );\n};\n\nexport default ProductViewPage;\n"],"sourceRoot":""}