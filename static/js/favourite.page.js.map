{"version":3,"sources":["webpack:///./src/views/Favourites/favourite.page.js"],"names":["customFavouriteStyles","makeStyles","theme","_container","container","_defineProperty","breakpoints","up","maxWidth","values","lg","down","sm","title","textTransform","color","fontSize","fontWeight","marginTop","marginBottom","letterSpacing","FavouritePage","customStyles","favourites","useSelector","state","products","useDispatch","React","createElement","Page","Container","className","Typography","bordertop","Grid","spacing","mt","map","product","id","item","key","xs","md","ProductCard"],"mappings":"48BAeO,IAAMA,EAAwBC,aAAW,SAACC,GAAK,IAAAC,EAAA,MAAM,CAC1DC,WAASD,EAAA,GAAAE,EAAAF,EACND,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,SAAUN,EAAMI,YAAYG,OAAOC,KACpCL,EAAAF,EACAD,EAAMI,YAAYK,KAAK,MAAQ,CAC9BH,SAAUN,EAAMI,YAAYG,OAAOG,KACpCT,GAEHU,MAAKR,EAAA,CACHS,cAAe,YACfC,MAAO,UACPC,SAAU,OACVC,WAAY,MACZC,UAAW,OACXC,aAAc,OACdC,cAAe,SACdlB,EAAMI,YAAYK,KAAK,MAAQ,CAC9BO,UAAW,SAGhB,IA0CcG,UAxCO,WACpB,IAAMC,EAAetB,IACfuB,EAAaC,aAAY,SAACC,GAAK,OAAKA,EAAMC,SAASH,UAAU,IAClDI,cAiBjB,OACEC,IAAAC,cAACC,IAAI,CAACjB,MAAM,cACVe,IAAAC,cAACE,IAAS,CAACvB,SAAS,KAAKwB,UAAWV,EAAalB,WAC/CwB,IAAAC,cAACI,IAAU,CAACD,UAAWV,EAAaT,OAAO,YAC3Ce,IAAAC,cAAA,MAAIK,UAAU,kBAAkBjB,WAAW,SAC3CW,IAAAC,cAACM,IAAI,CAAC/B,WAAS,EAACgC,QAAS,EAAGC,GAAI,GAC7Bd,GACCA,EAAWe,KAAI,SAACC,EAASC,GACvB,OACEZ,IAAAC,cAACM,IAAI,CAACM,MAAI,EAACC,IAAKF,EAAIG,GAAI,EAAGC,GAAI,GAC7BhB,IAAAC,cAACgB,IAAW,CAACH,IAAKF,EAAID,QAASA,IAGrC,MAKZ,C","file":"favourite.page.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Page from \"../../components/Page\";\nimport ProductCard from \"../../components/card\";\nimport { Typography } from \"@mui/material\";\nimport { Grid, Container } from \"@mui/material\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\nimport Api from \"../../components/Api\";\nimport {\n  setProducts,\n  setSearch,\n  setLoadingSpin,\n} from \"../../redux/products/produtsSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@mui/styles\";\n\nexport const customFavouriteStyles = makeStyles((theme) => ({\n  container: {\n    [theme.breakpoints.up(\"lg\")]: {\n      maxWidth: theme.breakpoints.values.lg,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      maxWidth: theme.breakpoints.values.sm,\n    },\n  },\n  title: {\n    textTransform: \"uppercase\",\n    color: \"#3e4152\",\n    fontSize: \"28px\",\n    fontWeight: \"700\",\n    marginTop: \"34px\",\n    marginBottom: \"10px\",\n    letterSpacing: \"1.5px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"20px\",\n    },\n  },\n}));\n\nconst FavouritePage = () => {\n  const customStyles = customFavouriteStyles();\n  const favourites = useSelector((state) => state.products.favourites);\n  const dispatch = useDispatch();\n\n  const handleFetchProducts = () => {\n    privateApiGET(Api.products)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          dispatch(setProducts(data?.data));\n          dispatch(setLoadingSpin(false));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n\n  return (\n    <Page title=\"Favourites\">\n      <Container maxWidth=\"md\" className={customStyles.container}>\n        <Typography className={customStyles.title}>Wishlist</Typography>\n        <hr bordertop=\"2px solid black\" fontWeight=\"bold\"></hr>\n        <Grid container spacing={2} mt={2}>\n          {favourites &&\n            favourites.map((product, id) => {\n              return (\n                <Grid item key={id} xs={6} md={4}>\n                  <ProductCard key={id} product={product} />\n                </Grid>\n              );\n            })}\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default FavouritePage;\n"],"sourceRoot":""}