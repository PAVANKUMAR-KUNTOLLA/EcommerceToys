{"version":3,"sources":["webpack:///./src/views/Favourites/favourite.page.js"],"names":["customFavouriteStyles","makeStyles","theme","_container","container","_defineProperty","breakpoints","up","maxWidth","values","lg","down","sm","title","textTransform","color","fontSize","fontWeight","marginTop","marginBottom","letterSpacing","FavouritePage","customStyles","products","useSelector","state","favourites","navigate","useDispatch","useNavigate","React","createElement","Page","length","Container","className","Box","Typography","bordertop","Grid","spacing","mt","map","product","id","item","key","xs","md","ProductCard","Alert","severity","sx","Link","onClick","ProductSlider","filter","is_favourite"],"mappings":"wgCAiBO,IAAMA,EAAwBC,aAAW,SAACC,GAAK,IAAAC,EAAA,MAAM,CAC1DC,WAASD,EAAA,GAAAE,EAAAF,EACND,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,SAAUN,EAAMI,YAAYG,OAAOC,KACpCL,EAAAF,EACAD,EAAMI,YAAYK,KAAK,MAAQ,CAC9BH,SAAUN,EAAMI,YAAYG,OAAOG,KACpCT,GAEHU,MAAKR,EAAA,CACHS,cAAe,YACfC,MAAO,UACPC,SAAU,OACVC,WAAY,MACZC,UAAW,OACXC,aAAc,OACdC,cAAe,SACdlB,EAAMI,YAAYK,KAAK,MAAQ,CAC9BO,UAAW,SAGhB,IAsEcG,UApEO,WACpB,IAAMC,EAAetB,IACfuB,EAAWC,aAAY,SAACC,GAAK,OAAKA,EAAMF,SAASA,QAAQ,IACzDG,EAAaF,aAAY,SAACC,GAAK,OAAKA,EAAMF,SAASG,UAAU,IAE7DC,GADWC,cACAC,eAiBjB,OACEC,IAAAC,cAACC,IAAI,CAACnB,MAAM,cACTU,EAASU,OAAS,EACjBH,IAAAC,cAACG,IAAS,CAAC1B,SAAS,KAAK2B,UAAWb,EAAalB,WAC9CsB,EAAWO,OAAS,EACnBH,IAAAC,cAACK,IAAG,KACFN,IAAAC,cAACM,IAAU,CAACF,UAAWb,EAAaT,OAAO,cAC3CiB,IAAAC,cAAA,MAAIO,UAAU,kBAAkBrB,WAAW,SAC3Ca,IAAAC,cAACQ,IAAI,CAACnC,WAAS,EAACoC,QAAS,EAAGC,GAAI,GAC7Bf,EAAWgB,KAAI,SAACC,EAASC,GACxB,OACEd,IAAAC,cAACQ,IAAI,CAACM,MAAI,EAACC,IAAKF,EAAIG,GAAI,EAAGC,GAAI,GAC7BlB,IAAAC,cAACkB,IAAW,CAACH,IAAKF,EAAID,QAASA,IAGrC,MAIJb,IAAAC,cAACG,IAAS,CAAC1B,SAAS,KAAK2B,UAAWb,EAAalB,WAC/C0B,IAAAC,cAACmB,IAAK,CAACC,SAAS,OAAOC,GAAI,CAAElC,UAAW,CAAE6B,GAAI,KAAMnC,GAAI,QAAU,2BACvC,IACzBkB,IAAAC,cAACsB,IAAI,CAACC,QAAS,kBAAM3B,EAAS,gBAAgB,GAAE,mBAMtDG,IAAAC,cAACQ,IAAI,CAACnC,WAAS,EAACoC,QAAS,EAAGC,GAAI,GAC9BX,IAAAC,cAACQ,IAAI,CAACM,MAAI,EAACE,GAAI,IACbjB,IAAAC,cAACM,IAAU,CAACF,UAAWb,EAAaT,OAAO,gBAG3CiB,IAAAC,cAACwB,IAAa,CACZhC,SAAUA,EAASiC,QACjB,SAACb,EAASC,GAAE,OAA8B,IAAzBD,EAAQc,YAAsB,SAMvD,KAGV,C","file":"favourite.page.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Page from \"../../components/Page\";\nimport ProductCard from \"../../components/card\";\nimport { Typography } from \"@mui/material\";\nimport { Box, Grid, Container, Alert, Link } from \"@mui/material\";\nimport { privateApiGET } from \"../../components/PrivateRoute\";\nimport Api from \"../../components/Api\";\nimport {\n  setProducts,\n  setSearch,\n  setLoadingSpin,\n} from \"../../redux/products/produtsSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@mui/styles\";\nimport ProductSlider from \"../../components/slider\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const customFavouriteStyles = makeStyles((theme) => ({\n  container: {\n    [theme.breakpoints.up(\"lg\")]: {\n      maxWidth: theme.breakpoints.values.lg,\n    },\n    [theme.breakpoints.down(\"md\")]: {\n      maxWidth: theme.breakpoints.values.sm,\n    },\n  },\n  title: {\n    textTransform: \"uppercase\",\n    color: \"#3e4152\",\n    fontSize: \"28px\",\n    fontWeight: \"700\",\n    marginTop: \"34px\",\n    marginBottom: \"10px\",\n    letterSpacing: \"1.5px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: \"20px\",\n    },\n  },\n}));\n\nconst FavouritePage = () => {\n  const customStyles = customFavouriteStyles();\n  const products = useSelector((state) => state.products.products);\n  const favourites = useSelector((state) => state.products.favourites);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleFetchProducts = () => {\n    privateApiGET(Api.products)\n      .then((response) => {\n        const { status, data } = response;\n        if (status === 200) {\n          console.log(\"data\", data);\n          dispatch(setProducts(data?.data));\n          dispatch(setLoadingSpin(false));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n      });\n  };\n\n  return (\n    <Page title=\"Favourites\">\n      {products.length > 0 ? (\n        <Container maxWidth=\"md\" className={customStyles.container}>\n          {favourites.length > 0 ? (\n            <Box>\n              <Typography className={customStyles.title}>Favourites</Typography>\n              <hr bordertop=\"2px solid black\" fontWeight=\"bold\"></hr>\n              <Grid container spacing={2} mt={2}>\n                {favourites.map((product, id) => {\n                  return (\n                    <Grid item key={id} xs={6} md={4}>\n                      <ProductCard key={id} product={product} />\n                    </Grid>\n                  );\n                })}\n              </Grid>\n            </Box>\n          ) : (\n            <Container maxWidth=\"sm\" className={customStyles.container}>\n              <Alert severity=\"info\" sx={{ marginTop: { xs: \"3%\", sm: \"5%\" } }}>\n                Your Favourites is Empty{\" \"}\n                <Link onClick={() => navigate(\"/app/products\")}>\n                  View Products\n                </Link>\n              </Alert>\n            </Container>\n          )}\n          <Grid container spacing={2} mt={3}>\n            <Grid item xs={12}>\n              <Typography className={customStyles.title}>\n                You May Like\n              </Typography>\n              <ProductSlider\n                products={products.filter(\n                  (product, id) => product.is_favourite === false\n                )}\n              />\n            </Grid>\n          </Grid>\n        </Container>\n      ) : null}\n    </Page>\n  );\n};\n\nexport default FavouritePage;\n"],"sourceRoot":""}